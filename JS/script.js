const rabbit = document.getElementById('rabbit');
const gameArea = document.getElementById('game-container');
const scoreDisplay = document.getElementById('scoreDisplay');
const scoreValue = document.getElementById('scoreValue');
let score = 0;
let rabbitX = 0;
let rabbitY = 0;
let isMoving = false;
let moveTimeout = null;
let gameRect = null;

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
function init() {
    console.log('üöÄ Initializing game...');
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ —Ä–∞–∑–º–µ—Ä—ã
    updateGameRect();
    
    // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—É—é –ø–æ–∑–∏—Ü–∏—é —Å—Ç—Ä–æ–≥–æ –≤ —Ü–µ–Ω—Ç—Ä–µ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
    rabbitX = gameRect.width / 2;
    rabbitY = gameRect.height / 2;
    
    updateRabbitPosition();
    animateRabbit();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ —Å—Ä–∞–∑—É
    setTimeout(() => {
        moveRabbit();
    }, 300);
    
    // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    rabbit.addEventListener('click', catchRabbit);
    rabbit.addEventListener('touchstart', catchRabbit, { passive: false });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Ä–∞–∑–º–µ—Ä–∞
    window.addEventListener('resize', handleResize);
    window.addEventListener('orientationchange', handleOrientationChange);
    
    console.log('‚úÖ Game ready - rabbit will ALWAYS stay in viewport');
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–æ–≤ –∏–≥—Ä–æ–≤–æ–π –æ–±–ª–∞—Å—Ç–∏
function updateGameRect() {
    gameRect = gameArea.getBoundingClientRect();
    console.log('üìê Viewport size:', Math.round(gameRect.width), 'x', Math.round(gameRect.height));
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
function handleOrientationChange() {
    console.log('üîÑ Orientation change detected');
    // –î–∞–µ–º –≤—Ä–µ–º—è –Ω–∞ –ø–æ–ª–Ω—É—é –ø–µ—Ä–µ—Ä–∏—Å–æ–≤–∫—É
    setTimeout(() => {
        handleResize();
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–º–µ—â–∞–µ–º –∫—Ä–æ–ª–∏–∫–∞ –≤ —Ü–µ–Ω—Ç—Ä –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –æ—Ä–∏–µ–Ω—Ç–∞—Ü–∏–∏
        rabbitX = gameRect.width / 2;
        rabbitY = gameRect.height / 2;
        updateRabbitPosition();
    }, 200);
}

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ä–∞–∑–º–µ—Ä–∞
function handleResize() {
    console.log('üìè Viewport resize detected');
    if (moveTimeout) {
        clearTimeout(moveTimeout);
        moveTimeout = null;
    }
    
    updateGameRect();
    
    // –°–ò–õ–¨–ù–ê–Ø –ö–û–†–†–ï–ö–¶–ò–Ø: –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –∫—Ä–æ–ª–∏–∫ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
    const rabbitWidth = rabbit.offsetWidth || 50;
    const rabbitHeight = rabbit.offsetHeight || 60;
    
    // –ñ–µ—Å—Ç–∫–∏–µ –≥—Ä–∞–Ω–∏—Ü—ã - –∫—Ä–æ–ª–∏–∫ –Ω–µ –º–æ–∂–µ—Ç –≤—ã–π—Ç–∏ –∑–∞ —ç—Ç–∏ –ø—Ä–µ–¥–µ–ª—ã
    const maxX = gameRect.width - (rabbitWidth / 2);
    const maxY = gameRect.height - (rabbitHeight / 2);
    const minX = rabbitWidth / 2;
    const minY = rabbitHeight / 2;
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ–º –ø–æ–∑–∏—Ü–∏—é
    rabbitX = Math.max(minX, Math.min(rabbitX, maxX));
    rabbitY = Math.max(minY, Math.min(rabbitY, maxY));
    
    updateRabbitPosition();
    
    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω–æ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è–µ–º –¥–≤–∏–∂–µ–Ω–∏–µ
    if (!isMoving) {
        setTimeout(moveRabbit, 200);
    }
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ –∫—Ä–æ–ª–∏–∫–∞
function updateRabbitPosition() {
    rabbit.style.left = `${rabbitX}px`;
    rabbit.style.top = `${rabbitY}px`;
}

// –ê–Ω–∏–º–∞—Ü–∏—è —Å–ø—Ä–∞–π—Ç–∞
function animateRabbit() {
    rabbit.style.animation = 'runRabbit 0.7s steps(7) infinite';
}

// –ü—Ä—ã–∂–æ–∫ –∫—Ä–æ–ª–∏–∫–∞ - –ì–ê–†–ê–ù–¢–ò–Ø —á—Ç–æ –æ–Ω –≤—Å–µ–≥–¥–∞ –≤ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏
function moveRabbit() {
    if (isMoving) return;
    
    isMoving = true;
    
    const rabbitWidth = rabbit.offsetWidth || 50;
    const rabbitHeight = rabbit.offsetHeight || 60;
    
    // –û–ß–ï–ù–¨ –ë–ï–ó–û–ü–ê–°–ù–ê–Ø –ó–û–ù–ê: 95% –æ—Ç –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏ (–≤—Å–µ–≥–æ 2.5% –æ—Ç—Å—Ç—É–ø –æ—Ç –∫—Ä–∞–µ–≤)
    const safeZonePadding = 0.025;
    const minX = (rabbitWidth / 2) + (gameRect.width * safeZonePadding);
    const maxX = gameRect.width - (rabbitWidth / 2) - (gameRect.width * safeZonePadding);
    const minY = (rabbitHeight / 2) + (gameRect.height * safeZonePadding);
    const maxY = gameRect.height - (rabbitHeight / 2) - (gameRect.height * safeZonePadding);
    
    // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –°–¢–†–û–ì–û –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∑–æ–Ω–µ
    let newX, newY;
    
    // –ì–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ–º, —á—Ç–æ –ø–æ–∑–∏—Ü–∏—è –≤–∞–ª–∏–¥–Ω–∞
    do {
        newX = Math.random() * (maxX - minX) + minX;
        newY = Math.random() * (maxY - minY) + minY;
    } while (isNaN(newX) || isNaN(newY));
    
    // –ñ–µ—Å—Ç–∫–æ–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
    rabbitX = Math.max(minX, Math.min(newX, maxX));
    rabbitY = Math.max(minY, Math.min(newY, maxY));
    
    updateRabbitPosition();
    
    // –û—á–µ–Ω—å –∫–æ—Ä–æ—Ç–∫–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä—ã–∂–∫–∞: 0.6-0.9 —Å–µ–∫—É–Ω–¥—ã (—á–∞—Å—Ç–æ –ø–æ—è–≤–ª—è–µ—Ç—Å—è)
    const nextMoveTime = 600 + Math.random() * 300;
    
    moveTimeout = setTimeout(() => {
        isMoving = false;
        moveRabbit();
    }, nextMoveTime);
}

// –õ–æ–≤–∏–º –∫—Ä–æ–ª–∏–∫–∞
function catchRabbit(event) {
    if (event.type === 'touchstart') {
        event.preventDefault();
        event.stopPropagation();
    }
    
    score++;
    // –ú–µ–Ω—è–µ–º –¢–û–õ–¨–ö–û —á–∏—Å–ª–æ, –Ω–∞–∑–≤–∞–Ω–∏–µ –æ—Å—Ç–∞–µ—Ç—Å—è –ø—Ä–µ–∂–Ω–∏–º
    scoreValue.textContent = score;
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø—Ä–∏ –∫–ª–∏–∫–µ
    rabbit.classList.add('rabbit-caught');
    setTimeout(() => {
        rabbit.classList.remove('rabbit-caught');
    }, 300);
    
    // –°—Ä–∞–∑—É –ø—Ä—ã–≥–∞–µ—Ç –¥–∞–ª—å—à–µ (–æ—Å—Ç–∞–µ—Ç—Å—è –≤ –≤–∏–¥–∏–º–æ–π –æ–±–ª–∞—Å—Ç–∏)
    if (moveTimeout) {
        clearTimeout(moveTimeout);
        moveTimeout = null;
    }
    isMoving = false;
    
    // –ù–µ–º–µ–¥–ª–µ–Ω–Ω—ã–π –ø—Ä—ã–∂–æ–∫
    moveRabbit();
}

// –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é
rabbit.addEventListener('contextmenu', (e) => {
    e.preventDefault();
    return false;
});

// –ó–∞–ø—É—Å–∫ –∏–≥—Ä—ã –∫–æ–≥–¥–∞ DOM –∑–∞–≥—Ä—É–∂–µ–Ω
document.addEventListener('DOMContentLoaded', function() {
    console.log('üìÑ DOM loaded - starting game');
    setTimeout(init, 100);
});

// –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–≥—Ä—É–∑–∫–µ
window.addEventListener('load', function() {
    console.log('üéØ Window fully loaded');
});